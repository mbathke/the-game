// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  email       String @unique
  name        String
  nickname    String
  password    String
  characters  Character[]
  role        String // admin, game_master, player
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Character {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  user        User @relation(fields: [userId], references: [id])
  userId      String @db.ObjectId
  properties  Property[]
  features    Feature[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Property {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  type        String // strong, fast, smart, fabulous, joy, coins, treats
  value       Int  
  maxValue    Int?
  character   Character @relation(fields: [characterId], references: [id])
  characterId String @db.ObjectId 
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Feature {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  character   Character? @relation(fields: [characterId], references: [id])
  characterId String? @db.ObjectId
  companion   Companion? @relation(fields: [companionId], references: [id])
  companionId String? @db.ObjectId
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Companion {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  features    Feature[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
